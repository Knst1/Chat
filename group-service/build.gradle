plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'com.chat.group'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', "Hoxton.SR4")
	set('postgresqlVersion', "42.2.12")
	set('javaxAnnotationVersion', "1.3.2")
	set('jsr305Version', "3.0.2")
	set('commonsVersion', "3.10")
	set('lombokVersion', "1.18.12")
	set('hibernateValidatorVersion', "6.1.5.Final")
	set('hibernateCoreVersion', "5.4.15.Final")
	set('hibernateEntitymanagerVersion', "5.4.15.Final")
	set('persistenceVersion', "2.2")
	set("findbugsVersion", "3.0.2")
	set("jacocoVersion", "0.8.5")
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	compile "org.postgresql:postgresql:${postgresqlVersion}"
	compile "javax.annotation:javax.annotation-api:${javaxAnnotationVersion}"
	compile "javax.persistence:javax.persistence-api:${persistenceVersion}"
	compile "org.hibernate:hibernate-core:${hibernateCoreVersion}"
	compile "org.hibernate:hibernate-entitymanager:${hibernateEntitymanagerVersion}"
	compile "org.hibernate.validator:hibernate-validator:${hibernateValidatorVersion}"
	compile "org.apache.commons:commons-lang3:${commonsVersion}"
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	compile "com.google.code.findbugs:jsr305:${findbugsVersion}"
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

jacoco {
	toolVersion = jacocoVersion
}

jacocoTestReport {
	reports {
		html.enabled = true
		xml.enabled = true
		csv.enabled = true
	}
}
test.finalizedBy jacocoTestReport